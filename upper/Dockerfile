# syntax=docker/dockerfile:1

ARG GO_VERSION=1.22.2
FROM --platform=$BUILDPLATFORM golang:${GO_VERSION} AS build
WORKDIR /src

# Download dependencies as a separate step to take advantage of Docker's caching.
RUN --mount=type=cache,target=/go/pkg/mod/ \
    --mount=type=bind,source=go.sum,target=go.sum \
    --mount=type=bind,source=go.mod,target=go.mod \
    go mod download -x

# This is the architecture youâ€™re building for, which is passed in by the builder.
# Placing it here allows the previous steps to be cached across architectures.
ARG TARGETARCH

# Leverage a cache mount to /go/pkg/mod/ to speed up subsequent builds.
RUN --mount=type=cache,target=/go/pkg/mod/ \
    --mount=type=bind,target=. \
    CGO_ENABLED=0 GOARCH=$TARGETARCH go build -o /bin/upper .




FROM alpine:latest AS final

# LABEL org.opencontainers.image.source="https://github.com/g0t4/course-gh-actions"
LABEL org.opencontainers.image.description="upper command, written in go"
LABEL org.opencontainers.image.licenses=MIT

COPY --from=build /bin/upper /bin/


ENTRYPOINT [ "/bin/upper" ]
